// Generated by delombok at Wed Apr 13 12:12:31 CST 2022
package com.puboot.module.admin.vo;

import lombok.Getter;

/**
 * @author Linzhaoguan
 * @version V1.0
 * @date 2019年9月11日
 */
public class UploadResponse {
    private String fileName;
    private String originalFileName;
    private Long size;
    private String type;
    private String url;
    private Integer status;
    private String msg;

    private UploadResponse(String fileName, String originalFileName, String type, String url, Integer status) {
        this.fileName = fileName;
        this.originalFileName = originalFileName;
        this.type = type;
        this.url = url;
        this.status = status;
    }

    private UploadResponse(String originalFileName, Integer status, String msg) {
        this.originalFileName = originalFileName;
        this.status = status;
        this.msg = msg;
    }

    public static UploadResponse success(String fileName, String originalFileName, String type, String url, Integer status) {
        return new UploadResponse(fileName, originalFileName, type, url, status);
    }

    public static UploadResponse failed(String originalFileName, Integer status, String msg) {
        return new UploadResponse(originalFileName, status, msg);
    }


    public enum ErrorEnum {
        //无
        NONE("None"), 
        // 文件超出大小限制
        OVER_SIZE("File Size largger than the maximum"), 
        // 文件格式不合规范
        ILLEGAL_EXTENSION("Unsupported file type"), 
        // 文件不存在
        FILE_NOT_FOUND("File Not Found");
        public final String msg;

        @java.lang.SuppressWarnings("all")
        private ErrorEnum(final String msg) {
            this.msg = msg;
        }
    }

    @java.lang.SuppressWarnings("all")
    public String getFileName() {
        return this.fileName;
    }

    @java.lang.SuppressWarnings("all")
    public String getOriginalFileName() {
        return this.originalFileName;
    }

    @java.lang.SuppressWarnings("all")
    public Long getSize() {
        return this.size;
    }

    @java.lang.SuppressWarnings("all")
    public String getType() {
        return this.type;
    }

    @java.lang.SuppressWarnings("all")
    public String getUrl() {
        return this.url;
    }

    @java.lang.SuppressWarnings("all")
    public Integer getStatus() {
        return this.status;
    }

    @java.lang.SuppressWarnings("all")
    public String getMsg() {
        return this.msg;
    }

    @java.lang.SuppressWarnings("all")
    public void setFileName(final String fileName) {
        this.fileName = fileName;
    }

    @java.lang.SuppressWarnings("all")
    public void setOriginalFileName(final String originalFileName) {
        this.originalFileName = originalFileName;
    }

    @java.lang.SuppressWarnings("all")
    public void setSize(final Long size) {
        this.size = size;
    }

    @java.lang.SuppressWarnings("all")
    public void setType(final String type) {
        this.type = type;
    }

    @java.lang.SuppressWarnings("all")
    public void setUrl(final String url) {
        this.url = url;
    }

    @java.lang.SuppressWarnings("all")
    public void setStatus(final Integer status) {
        this.status = status;
    }

    @java.lang.SuppressWarnings("all")
    public void setMsg(final String msg) {
        this.msg = msg;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof UploadResponse)) return false;
        final UploadResponse other = (UploadResponse) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$fileName = this.getFileName();
        final java.lang.Object other$fileName = other.getFileName();
        if (this$fileName == null ? other$fileName != null : !this$fileName.equals(other$fileName)) return false;
        final java.lang.Object this$originalFileName = this.getOriginalFileName();
        final java.lang.Object other$originalFileName = other.getOriginalFileName();
        if (this$originalFileName == null ? other$originalFileName != null : !this$originalFileName.equals(other$originalFileName)) return false;
        final java.lang.Object this$size = this.getSize();
        final java.lang.Object other$size = other.getSize();
        if (this$size == null ? other$size != null : !this$size.equals(other$size)) return false;
        final java.lang.Object this$type = this.getType();
        final java.lang.Object other$type = other.getType();
        if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
        final java.lang.Object this$url = this.getUrl();
        final java.lang.Object other$url = other.getUrl();
        if (this$url == null ? other$url != null : !this$url.equals(other$url)) return false;
        final java.lang.Object this$status = this.getStatus();
        final java.lang.Object other$status = other.getStatus();
        if (this$status == null ? other$status != null : !this$status.equals(other$status)) return false;
        final java.lang.Object this$msg = this.getMsg();
        final java.lang.Object other$msg = other.getMsg();
        if (this$msg == null ? other$msg != null : !this$msg.equals(other$msg)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof UploadResponse;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $fileName = this.getFileName();
        result = result * PRIME + ($fileName == null ? 43 : $fileName.hashCode());
        final java.lang.Object $originalFileName = this.getOriginalFileName();
        result = result * PRIME + ($originalFileName == null ? 43 : $originalFileName.hashCode());
        final java.lang.Object $size = this.getSize();
        result = result * PRIME + ($size == null ? 43 : $size.hashCode());
        final java.lang.Object $type = this.getType();
        result = result * PRIME + ($type == null ? 43 : $type.hashCode());
        final java.lang.Object $url = this.getUrl();
        result = result * PRIME + ($url == null ? 43 : $url.hashCode());
        final java.lang.Object $status = this.getStatus();
        result = result * PRIME + ($status == null ? 43 : $status.hashCode());
        final java.lang.Object $msg = this.getMsg();
        result = result * PRIME + ($msg == null ? 43 : $msg.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "UploadResponse(fileName=" + this.getFileName() + ", originalFileName=" + this.getOriginalFileName() + ", size=" + this.getSize() + ", type=" + this.getType() + ", url=" + this.getUrl() + ", status=" + this.getStatus() + ", msg=" + this.getMsg() + ")";
    }
}
